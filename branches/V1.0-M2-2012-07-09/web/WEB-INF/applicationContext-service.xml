<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <!--it use when you want to use @Autowired Instead of setter method-->
    <context:component-scan base-package="com.sefryek.doublepizza" />

    <bean id="menuService" class="com.sefryek.doublepizza.service.implementation.MenuServiceImpl">
        <property name="menuDAO" ref="menuDAO"/>
    </bean>

    <bean id="storeService" class="com.sefryek.doublepizza.service.implementation.StoreServiceImpl">
        <property name="storeDAO" ref="storeDAO"/>
    </bean>

    <bean id="userService" class="com.sefryek.doublepizza.service.implementation.UserServiceImpl">
        <property name="userDAO" ref="userDAO"/>
    </bean>

     <bean id="subscriberService" class="com.sefryek.doublepizza.service.implementation.SubscriberServiceImpl">
        <property name="subscriberDAO" ref="subscriberDAO"/>
    </bean>

    <bean id="feedBackService" class="com.sefryek.doublepizza.service.implementation.FeedBackServiceImpl">
        <property name="feedBackDAO" ref="feedBackDAO"/>
    </bean>

    <bean id="orderService" class="com.sefryek.doublepizza.service.implementation.OrderServiceImpl">
        <property name="orderDAO" ref="orderDAO"/>
    </bean>

    <bean id="taxService" class="com.sefryek.doublepizza.service.implementation.TaxServiceImpl">
        <property name="taxDAO" ref="taxDAO"/>
    </bean>

    <bean id="sliderService" class="com.sefryek.doublepizza.service.implementation.SliderServiceImpl">
        <property name="sliderDAO" ref="sliderDAO"/>
    </bean>

    <bean id="postalCodeService" class="com.sefryek.doublepizza.service.implementation.PostalCodeServiceImpl">
        <property name="postalCodeDAO" ref="postalCodeDAO"/>
    </bean>

    <bean id="suggestionService" class="com.sefryek.doublepizza.service.implementation.SuggestionServiceImpl">
        <property name="suggestionDAO" ref="suggestionDAO"/>
    </bean>

    <!-- the transactional advice -->
    <bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="get*" />
            <tx:method name="*" rollback-for="com.sefryek.doublepizza.dao.exception.DAOException"/>
        </tx:attributes>
    </tx:advice>

    <!-- the transactional advice -->
    <aop:config>
        <aop:pointcut id="userServiceMethods"
                      expression="execution(* com.sefryek.doublepizza.service.IUserService.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="userServiceMethods"/>
    </aop:config>

    <aop:config>
        <aop:pointcut id="feedBackServiceMethods"
                      expression="execution(* com.sefryek.doublepizza.service.IFeedBackService.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="feedBackServiceMethods"/>
    </aop:config>

    <aop:config>
        <aop:pointcut id="orderServiceMethods"
                      expression="execution(* com.sefryek.doublepizza.service.IOrderService.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="orderServiceMethods"/>
    </aop:config>

    <aop:config>
        <aop:pointcut id="taxServiceMethods"
                      expression="execution(* com.sefryek.doublepizza.service.ITaxService.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="taxServiceMethods"/>
    </aop:config>

    <aop:config>
        <aop:pointcut id="sliderServiceMethods"
                      expression="execution(* com.sefryek.doublepizza.service.ISliderService.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="sliderServiceMethods"/>
    </aop:config>

    <aop:config>
        <aop:pointcut id="subscriberServiceMethods"
                      expression="execution(* com.sefryek.doublepizza.service.ISubscriberService.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="subscriberServiceMethods"/>
    </aop:config>

    <aop:config>
        <aop:pointcut id="postalcodeServiceMethods"
                      expression="execution(* com.sefryek.doublepizza.service.IPostalCodeService.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="postalcodeServiceMethods"/>
    </aop:config>

    <aop:config>
        <aop:pointcut id="suggestionServiceMethods"
                      expression="execution(* com.sefryek.doublepizza.service.ISuggestionService.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="suggestionServiceMethods"/>
    </aop:config>

</beans>
